billing:
  cost:
    method: get
    description: Get Hpc Product Cost.
    path: billing/cost
    parameters:
      zone: ''
      timestamp: ''
      prod_name: ''
      paid_type: ''
      queue_type: ''
      duration: ''
    body: {}
  getmeter:
    method: get
    description: Get Hpc Product Meter.
    path: billing/getmeter
    parameters:
      timestamp: ''
      instance_id: ''
      meters: ''
      start_time: ''
      end_time: ''
      metering_period: ''
      aggregation: ''
      time_zone: ''
    body: {}
  notify:
    method: post
    description: send NewBilling notify to hpc.
    path: billing/notify
    parameters:
      timestamp: ''
    body:
      access_sys_id: ''
      event: ''
      occurred_at: ''
      prod_inst_id_ext: ''
      user_id: ''
      zone: ''
  productmodel:
    method: get
    description: Get Hpc Product Billing Model.
    path: billing/productmodel
    parameters:
      zone: ''
      timestamp: ''
      prod_name: ''
    body: {}
cli:
  runCmd:
    method: post
    description: execute hpc command in wrapper mode
    path: cli/runCmd
    parameters:
      timestamp: ''
    body:
      cmd: ''
      dispatcher: ''
      ip: ''
      user: ''
      zone: ''
cluster:
  addNodes:
    method: post
    description: add hpc/ehpc cluster nodes
    path: cluster/addNodes
    parameters:
      timestamp: ''
    body:
      cluster_id: ''
      node_count: ''
      node_name: ''
      node_role: ''
      private_ips: ''
      resource_conf: ''
      zone: ''
  addNodesFee:
    method: get
    description: get fee for adding hpc/ehpc cluster nodes
    path: cluster/addNodesFee
    parameters:
      zone: ''
      timestamp: ''
      cluster_id: ''
      node_count: ''
      node_name: ''
      node_role: ''
    body: {}
  associateLoginNodeEip:
    method: post
    description: associate cluster login node eip
    path: cluster/associateLoginNodeEip
    parameters:
      timestamp: ''
    body: {}
  createCluster:
    method: post
    description: Create hpc cluster.
    path: cluster/createCluster
    parameters:
      timestamp: ''
    body: {}
  deleteCluster:
    method: post
    description: delete hpc cluster list.
    path: cluster/deleteCluster
    parameters:
      timestamp: ''
    body:
      cluster_ids: ''
      run_user: ''
      unlease: ''
      zone: ''
  deleteNodes:
    method: post
    description: delete hpc cluster nodes.
    path: cluster/deleteNodes
    parameters:
      timestamp: ''
    body:
      cluster_id: ''
      node_ids: ''
      zone: ''
  dissociateLoginNodeEip:
    method: post
    description: dissociate cluster login node eip
    path: cluster/dissociateLoginNodeEip
    parameters:
      timestamp: ''
    body: {}
  hpcCluster:
    method: get
    description: Get hpc cluster detail.
    path: cluster/hpcCluster
    parameters:
      zone: ''
      timestamp: ''
      run_user: ''
    body: {}
  list:
    method: get
    description: Get hpc cluster list.
    path: cluster/list
    parameters:
      zone: ''
      timestamp: ''
      run_user: ''
      offset: ''
      limit: ''
      verbose: ''
      cluster_id: ''
      cluster_type: ''
      status: ''
      shared_status: ''
      search_word: ''
      sort_key: ''
      reverse: ''
    body: {}
  listNodes:
    method: get
    description: get hpc/ehpc cluster nodes
    path: cluster/listNodes
    parameters:
      zone: ''
      timestamp: ''
      offset: ''
      limit: ''
      verbose: ''
      cluster_id: ''
      status: ''
      search_word: ''
      sort_key: ''
      node_role: ''
      reverse: ''
    body: {}
  modifyCluster:
    method: post
    description: modify hpc cluster attributions.
    path: cluster/modifyCluster
    parameters:
      timestamp: ''
    body:
      cluster_id: ''
      cluster_name: ''
      description: ''
      zone: ''
  nasInfo:
    method: get
    description: get nas info
    path: cluster/nasInfo
    parameters:
      zone: ''
      timestamp: ''
      cluster_id: ''
      search_word: ''
    body: {}
  resizeCluster:
    method: post
    description: start hpc/ehpc cluster nodes
    path: cluster/resizeCluster
    parameters:
      timestamp: ''
    body:
      cluster_id: ''
      cpu: ''
      gpu: ''
      instance_class: ''
      memory: ''
      node_role: ''
      storage_size: ''
      zone: ''
  resizeClusterFee:
    method: get
    description: get fee for resizing hpc/ehpc cluster nodes
    path: cluster/resizeClusterFee
    parameters:
      zone: ''
      timestamp: ''
      cluster_id: ''
      cpu: ''
      gpu: ''
      memory: ''
      storage_size: ''
      instance_class: ''
      node_role: ''
    body: {}
  startCluster:
    method: post
    description: start hpc/ehpc cluster nodes
    path: cluster/startCluster
    parameters:
      timestamp: ''
    body:
      cluster_ids: ''
      zone: ''
  stopCluster:
    method: post
    description: stop hpc/ehpc cluster nodes
    path: cluster/stopCluster
    parameters:
      timestamp: ''
    body:
      cluster_ids: ''
      zone: ''
  upgradeCluster:
    method: post
    description: upgrade cluster to new version
    path: cluster/upgradeCluster
    parameters:
      timestamp: ''
    body: {}
filetemplate:
  createFileTemp:
    method: post
    description: create hpc cluster file Template.
    path: filetemplate/createFileTemp
    parameters:
      timestamp: ''
      zone: ''
    body:
      file_name: ''
      format: ''
      text: ''
  tempDelete:
    method: get
    description: Delete Hpc File temp.
    path: filetemplate/tempDelete
    parameters:
      file_id: ''
      timestamp: ''
      zone: ''
    body: {}
  tempDetail:
    method: get
    description: Get hpc file temp.
    path: filetemplate/tempDetail
    parameters:
      file_id: ''
      timestamp: ''
      zone: ''
    body: {}
  tempList:
    method: get
    description: Get user hpc file temp list.
    path: filetemplate/tempList
    parameters:
      timestamp: ''
      zone: ''
      offset: ''
      limit: ''
    body: {}
  updateFileTemp:
    method: post
    description: update hpc cluster file Template.
    path: filetemplate/updateFileTemp
    parameters:
      timestamp: ''
      zone: ''
    body:
      file_id: ''
      file_name: ''
      format: ''
      text: ''
hpc:
  jobStatus:
    method: post
    description: update hpc job status.
    path: hpc/update/ehpc/jobStatus
    parameters:
      timestamp: ''
    body:
      app_cluster_id: ''
      data: ''
      zone: ''
job:
  createJobFile:
    method: post
    description: create job file.
    path: job/createJobFile
    parameters:
      timestamp: ''
    body:
      cluster_id: ''
      file_type: ''
      file_value: ''
      target_file: ''
      zone: ''
  deleteJobs:
    method: post
    description: delete hpc cluster job.
    path: job/deleteJobs
    parameters:
      timestamp: ''
    body:
      cluster_id: ''
      job_ids: ''
      zone: ''
  getJobMonitor:
    method: get
    description: Get user hpc job list.
    path: job/getJobMonitor
    parameters:
      cluster_id: ''
      zone: ''
      job_id: ''
      start_time: ''
      end_time: ''
      meters: ''
      limit: ''
    body: {}
  get_jobdetail_by_job_uuid:
    method: get
    description: Retrieve the detail info of job.
    path: job/jobdetail/{job_uuid}
    parameters:
      cluster_id: ''
      zone: ''
      timestamp: ''
    body: {}
  list:
    method: get
    description: Get user hpc job list.
    path: job/list
    parameters:
      cluster_id: ''
      run_user: ''
      job_status: ''
      zone: ''
      timestamp: ''
      offset: ''
      limit: ''
      search_word: ''
      queue_name: ''
      sort_key: ''
      reverse: ''
    body: {}
  pushJobMetrics:
    method: post
    description: the api for pushing job metrics.
    path: job/pushJobMetrics
    parameters:
      timestamp: ''
    body:
      jobs: ''
      last_usage_time: ''
      this_usage_time: ''
      zone: ''
  resumeJobs:
    method: post
    description: resume hpc cluster job.
    path: job/resumeJobs
    parameters:
      timestamp: ''
    body:
      cluster_id: ''
      job_ids: ''
      zone: ''
  stopJobs:
    method: post
    description: stop hpc cluster job.
    path: job/stopJobs
    parameters:
      timestamp: ''
    body:
      cluster_id: ''
      job_ids: ''
      zone: ''
  submitJob:
    method: post
    description: submit job to hpc cluster.
    path: job/submitJob
    parameters:
      timestamp: ''
    body:
      cluster_id: ''
      cmd_line: ''
      core_limit: ''
      hpcqueue_id: ''
      input_file: ''
      mem_limit: ''
      name: ''
      resource_limit: ''
      run_user: ''
      scheduler_queue_name: ''
      stderr_redirect_path: ''
      stdout_redirect_path: ''
      time_limit: ''
      zone: ''
  updateJobStatus:
    method: post
    description: the api of update hpc job status.
    path: job/updateJobStatus
    parameters:
      timestamp: ''
    body:
      job_events: ''
      zone: ''
jobtemplate:
  createJobTemp:
    method: post
    description: create hpc cluster job Template.
    path: jobtemplate/createJobTemp
    parameters:
      timestamp: ''
      zone: ''
    body:
      cluster_id: ''
      cmd_line: ''
      cmd_line_type: ''
      core_limit: ''
      host_name: ''
      job_name: ''
      job_priority: ''
      resource_limit: ''
      resources: ''
      run_user: ''
      scheduler_queue_name: ''
      stderr_redirect_path: ''
      stderr_redirect_path_type: ''
      stdout_redirect_path: ''
      stdout_redirect_path_type: ''
      temp_name: ''
      user_id: ''
  tempDelete:
    method: get
    description: Delete User Hpc Job temp.
    path: jobtemplate/tempDelete
    parameters:
      temp_id: ''
      timestamp: ''
      zone: ''
    body: {}
  tempDetail:
    method: get
    description: Get user hpc job temp.
    path: jobtemplate/tempDetail
    parameters:
      temp_id: ''
      timestamp: ''
      zone: ''
    body: {}
  tempList:
    method: get
    description: Get user hpc job temp list.
    path: jobtemplate/tempList
    parameters:
      user_id: ''
      cluster_id: ''
      timestamp: ''
      zone: ''
      offset: ''
      limit: ''
      search_word: ''
    body: {}
  updateJobTemp:
    method: post
    description: update hpc cluster job Template.
    path: jobtemplate/updateJobTemp
    parameters:
      timestamp: ''
      zone: ''
    body:
      cluster_id: ''
      cmd_line: ''
      core_limit: ''
      host_name: ''
      job_name: ''
      job_priority: ''
      resource_limit: ''
      resources: ''
      run_user: ''
      scheduler_queue_name: ''
      stderr_redirect_path: ''
      stdout_redirect_path: ''
      temp_id: ''
      temp_name: ''
      user_id: ''
operation:
  operation:
    method: get
    description: List operation.
    path: operation
    parameters:
      zone: ''
      timestamp: ''
      jobs: ''
      status: ''
      job_action: ''
      resource_ids: ''
      owner: ''
      directive: ''
      verbose: ''
      offset: ''
      limit: ''
      reverse: ''
      search_word: ''
    body: {}
permission:
  disable:
    method: post
    description: disable hpc.
    path: permission/disable
    parameters:
      timestamp: ''
    body:
      user_id: ''
  enable:
    method: post
    description: enable hpc.
    path: permission/enable
    parameters:
      timestamp: ''
    body:
      user_id: ''
  get_permission_by_user_id:
    method: get
    description: get hpc permission status.
    path: permission/{user_id}
    parameters:
      timestamp: ''
    body: {}
project:
  addMember:
    method: post
    description: add member to hpc project.
    path: project/addMember
    parameters:
      timestamp: ''
    body:
      member_infos: ''
      project_id: ''
      zone: ''
  addResource:
    method: post
    description: add resource to hpc project.
    path: project/addResource
    parameters:
      timestamp: ''
    body: {}
  addRule:
    method: post
    description: add rule to rule group in hpc project.
    path: project/addRule
    parameters:
      timestamp: ''
    body:
      project_id: ''
      rule_group_id: ''
      rule_id: ''
      zone: ''
  addRuleGroup:
    method: post
    description: add rule group to role in hpc project.
    path: project/addRuleGroup
    parameters:
      timestamp: ''
    body:
      project_id: ''
      role_id: ''
      rule_group_id: ''
      zone: ''
  create:
    method: post
    description: Create hpc project.
    path: project/create
    parameters:
      timestamp: ''
    body:
      description: ''
      enabled: ''
      member_infos: ''
      project_name: ''
      resource_id: ''
      zone: ''
  createRole:
    method: post
    description: Create hpc project role.
    path: project/createRole
    parameters:
      timestamp: ''
    body: {}
  createRule:
    method: post
    description: Create hpc project rule.
    path: project/createRule
    parameters:
      timestamp: ''
    body: {}
  createRuleGroup:
    method: post
    description: Create hpc project rule group.
    path: project/createRuleGroup
    parameters:
      timestamp: ''
    body: {}
  delMember:
    method: post
    description: delete hpc project.
    path: project/delMember
    parameters:
      timestamp: ''
    body:
      member_id: ''
      project_id: ''
      zone: ''
  delResource:
    method: post
    description: delete hpc project resource.
    path: project/delResource
    parameters:
      timestamp: ''
    body:
      project_id: ''
      resource_id: ''
      zone: ''
  delRule:
    method: post
    description: del rule from rule group in hpc project.
    path: project/delRule
    parameters:
      timestamp: ''
    body:
      project_id: ''
      rule_group_id: ''
      rule_id: ''
      zone: ''
  delRuleGroup:
    method: post
    description: del rule group from role in hpc project.
    path: project/delRuleGroup
    parameters:
      timestamp: ''
    body:
      project_id: ''
      role_id: ''
      rule_group_id: ''
      zone: ''
  destroy:
    method: post
    description: delete hpc project.
    path: project/destroy
    parameters:
      timestamp: ''
    body:
      project_id: ''
      unlease: ''
      zone: ''
  destroyRole:
    method: post
    description: delete hpc project role.
    path: project/destroyRole
    parameters:
      timestamp: ''
    body:
      project_id: ''
      role_id: ''
      unlease: ''
      zone: ''
  destroyRule:
    method: post
    description: delete hpc project rule.
    path: project/destroyRule
    parameters:
      timestamp: ''
    body:
      project_id: ''
      rule_id: ''
      unlease: ''
      zone: ''
  destroyRuleGroup:
    method: post
    description: delete hpc project rule group.
    path: project/destroyRuleGroup
    parameters:
      timestamp: ''
    body:
      project_id: ''
      rule_group_id: ''
      unlease: ''
      zone: ''
  initConfiguration:
    method: post
    description: init hpc project configuration.
    path: project/initConfiguration
    parameters:
      timestamp: ''
    body:
      zone: ''
  list:
    method: get
    description: Get hpc project list.
    path: project/list
    parameters:
      zone: ''
      timestamp: ''
      run_user: ''
      offset: ''
      limit: ''
      verbose: ''
      project_id: ''
      status: ''
      resource_id: ''
      search_word: ''
      sort_key: ''
      reverse: ''
    body: {}
  listMember:
    method: get
    description: Get hpc project member list.
    path: project/listMember
    parameters:
      zone: ''
      timestamp: ''
      run_user: ''
      offset: ''
      limit: ''
      verbose: ''
      project_id: ''
      member_id: ''
      role_type: ''
      member_name: ''
      member_user: ''
      member_account: ''
      search_word: ''
      sort_key: ''
      reverse: ''
    body: {}
  listResource:
    method: get
    description: Get hpc project resource list.
    path: project/listResource
    parameters:
      zone: ''
      timestamp: ''
      run_user: ''
      offset: ''
      limit: ''
      verbose: ''
      project_id: ''
      resource_id: ''
      search_word: ''
      sort_key: ''
      reverse: ''
    body: {}
  listRole:
    method: get
    description: Get hpc project role list.
    path: project/listRole
    parameters:
      zone: ''
      timestamp: ''
      run_user: ''
      offset: ''
      limit: ''
      verbose: ''
      project_id: ''
      status: ''
      search_word: ''
      sort_key: ''
      reverse: ''
    body: {}
  listRule:
    method: get
    description: Get hpc project rule list.
    path: project/listRule
    parameters:
      zone: ''
      timestamp: ''
      run_user: ''
      offset: ''
      limit: ''
      verbose: ''
      project_id: ''
      status: ''
      search_word: ''
      sort_key: ''
      reverse: ''
    body: {}
  listRuleGroup:
    method: get
    description: Get hpc project rule group list.
    path: project/listRuleGroup
    parameters:
      zone: ''
      timestamp: ''
      run_user: ''
      offset: ''
      limit: ''
      verbose: ''
      project_id: ''
      status: ''
      search_word: ''
      sort_key: ''
      reverse: ''
    body: {}
  modify:
    method: post
    description: modify hpc project attributions.
    path: project/modify
    parameters:
      timestamp: ''
    body:
      description: ''
      enabled: ''
      project_id: ''
      project_name: ''
      zone: ''
  modifyMember:
    method: post
    description: modify hpc project member attributions.
    path: project/modifyMember
    parameters:
      timestamp: ''
    body:
      description: ''
      enabled: ''
      member_id: ''
      member_name: ''
      project_id: ''
      role: ''
      role_type: ''
      zone: ''
  modifyResourse:
    method: post
    description: modify hpc project resource attributions.
    path: project/modifyResourse
    parameters:
      timestamp: ''
    body:
      description: ''
      enabled: ''
      project_id: ''
      resource_id: ''
      zone: ''
  modifyRole:
    method: post
    description: modify hpc project role attributions.
    path: project/modifyRole
    parameters:
      timestamp: ''
    body:
      description: ''
      project_id: ''
      role_id: ''
      status: ''
      zone: ''
  modifyRule:
    method: post
    description: modify hpc project rule attributions.
    path: project/modifyRule
    parameters:
      timestamp: ''
    body:
      description: ''
      project_id: ''
      rule_id: ''
      status: ''
      zone: ''
  modifyRuleGroup:
    method: post
    description: modify hpc project rule group attributions.
    path: project/modifyRuleGroup
    parameters:
      timestamp: ''
    body:
      description: ''
      project_id: ''
      rule_group_id: ''
      status: ''
      zone: ''
queue:
  bindPrivateQueue:
    method: post
    description: the user bind to private available queue
    path: queue/bindPrivateQueue
    parameters:
      timestamp: ''
    body:
      cluster_id: ''
      duration: ''
      is_auto_renewal: ''
      name: ''
      paid_type: ''
      type_id: ''
      zone: ''
  describeQueue:
    method: get
    description: describe queue
    path: queue/describeQueue
    parameters:
      zone: ''
      timestamp: ''
      id: ''
      cluster_id: ''
    body: {}
  addNodes:
    method: post
    description: 'add ehpc queue node '
    path: queue/ehpc/addNodes
    parameters:
      timestamp: ''
    body:
      cluster_id: ''
      hpcqueue_id: ''
      nodelist: ''
      zone: ''
  addQueue:
    method: post
    description: add a ehpc queue that current user can use
    path: queue/ehpc/addQueue
    parameters:
      timestamp: ''
    body:
      allow_accounts: ''
      cluster_id: ''
      default_queue: ''
      deny_accounts: ''
      max_time: ''
      min_node: ''
      name: ''
      status: ''
      user_group: ''
      zone: ''
  delQueues:
    method: post
    description: 'del ehpc queue '
    path: queue/ehpc/delQueues
    parameters:
      timestamp: ''
    body:
      cluster_id: ''
      queue_ids: ''
      zone: ''
  getQueueList:
    method: get
    description: get ehpc queue list
    path: queue/ehpc/getQueueList
    parameters:
      zone: ''
      timestamp: ''
      offset: ''
      limit: ''
      queue_ids: ''
      name: ''
      cluster_id: ''
      search_word: ''
      sort_key: ''
      reverse: ''
      is_active: ''
    body: {}
  modifyQueue:
    method: post
    description: 'modify a ehpc queue '
    path: queue/ehpc/modifyQueue
    parameters:
      timestamp: ''
    body:
      allow_accounts: ''
      cluster_id: ''
      default_queue: ''
      deny_accounts: ''
      hpcqueue_id: ''
      max_time: ''
      min_node: ''
      name: ''
      status: ''
      user_group: ''
      zone: ''
  removeNodes:
    method: post
    description: 'remove ehpc queue node '
    path: queue/ehpc/removeNodes
    parameters:
      timestamp: ''
    body:
      cluster_id: ''
      hpcqueue_id: ''
      nodelist: ''
      zone: ''
  getCurrentQueue:
    method: get
    description: get available  queue that current user can use
    path: queue/getCurrentQueue
    parameters:
      zone: ''
      timestamp: ''
      offset: ''
      limit: ''
      cluster_id: ''
      belong: ''
      search_word: ''
      sort_key: ''
      reverse: ''
    body: {}
  getQueueNodes:
    method: get
    description: get queue nodes
    path: queue/getQueueNodes
    parameters:
      zone: ''
      timestamp: ''
      offset: ''
      limit: ''
      search_word: ''
      hpcqueue_id: ''
    body: {}
  getQueueTypes:
    method: get
    description: get available private queue types
    path: queue/getQueueTypes
    parameters:
      zone: ''
      timestamp: ''
      offset: ''
      limit: ''
    body: {}
  addPhyQueue:
    method: post
    description: add a hpc phy queue
    path: queue/hpc/addPhyQueue
    parameters:
      timestamp: ''
    body:
      belong: ''
      categories: ''
      hpq_name: ''
      scheduler_queue_name: ''
      type_id: ''
      user_group: ''
      zone: ''
  delPhyQueues:
    method: post
    description: del hpc phy queue
    path: queue/hpc/delPhyQueues
    parameters:
      timestamp: ''
    body:
      hpq_ids: ''
      zone: ''
  getPhyQueues:
    method: get
    description: get hpc phy queue list
    path: queue/hpc/getPhyQueues
    parameters:
      zone: ''
      timestamp: ''
      offset: ''
      limit: ''
      hpq_ids: ''
      hpq_name: ''
      search_word: ''
      sort_key: ''
      reverse: ''
    body: {}
  isAvailableQueue:
    method: get
    description: that user unbind private queue
    path: queue/isAvailableQueue
    parameters:
      zone: ''
      timestamp: ''
      user_id: ''
      scheduler_queue_name: ''
    body: {}
  addQueueType:
    method: post
    description: add hpc queue type
    path: queue/queuetype/addQueueType
    parameters:
      timestamp: ''
    body:
      cpu_num: ''
      gpu_num: ''
      mem_size: ''
      name: ''
      node_num: ''
      zone: ''
  delQueueTypes:
    method: post
    description: delete hpc queue type
    path: queue/queuetype/delQueueTypes
    parameters:
      timestamp: ''
    body:
      type_ids: ''
      zone: ''
  queueTypeList:
    method: get
    description: get hpc queue type list
    path: queue/queuetype/queueTypeList
    parameters:
      zone: ''
      timestamp: ''
      offset: ''
      limit: ''
      type_ids: ''
      name: ''
      search_word: ''
      sort_key: ''
      reverse: ''
    body: {}
  unbindPrivateQueue:
    method: post
    description: that user unbind private queue
    path: queue/unbindPrivateQueue
    parameters:
      timestamp: ''
    body:
      ids: ''
      zone: ''
  updateQueueName:
    method: post
    description: update queue name
    path: queue/updateQueueName
    parameters:
      timestamp: ''
    body:
      id: ''
      name: ''
      zone: ''
rent:
  billInfo:
    method: get
    description: get cluster bill info
    path: rent/cluster/billInfo
    parameters:
      timestamp: ''
      zone: ''
      offset: ''
      limit: ''
      cluster_id: ''
      search_word: ''
      sort_key: ''
      reverse: ''
    body: {}
  privateResourceInfo:
    method: get
    description: get cluster private resource info for login node and private queue
    path: rent/cluster/privateResourceInfo
    parameters:
      timestamp: ''
      zone: ''
      offset: ''
      limit: ''
      cluster_id: ''
      search_word: ''
      sort_key: ''
      reverse: ''
      paid_type: ''
    body: {}
  shareResourceInfo:
    method: get
    description: get cluster private resource info for share queue
    path: rent/cluster/shareResourceInfo
    parameters:
      timestamp: ''
      zone: ''
      offset: ''
      limit: ''
      cluster_id: ''
      search_word: ''
      sort_key: ''
      reverse: ''
    body: {}
software:
  install:
    method: post
    description: install software list with in cluster
    path: software/cluster/install
    parameters:
      timestamp: ''
    body: {}
  list:
    method: get
    description: get all software list
    path: software/list
    parameters:
      zone: ''
      timestamp: ''
      deploy_mode: ''
      platform: ''
    body: {}
  uninstall:
    method: post
    description: uninstall software list with in cluster
    path: software/cluster/uninstall
    parameters:
      timestamp: ''
    body: {}
subuser:
  subuser:
    method: get
    description: Get Sub User List
    path: subuser
    parameters:
      zone: ''
      timestamp: ''
      offset: ''
      limit: ''
      reverse: ''
      hpc_status: ''
      search_word: ''
    body: {}
user:
  user:
    method: get
    description: Get Openldap User List
    path: user
    parameters:
      zone: ''
      timestamp: ''
      cluster_id2: ''
      user_id: ''
      offset: ''
      limit: ''
      search_word: ''
    body: {}
  addUser:
    method: post
    description: add cluster user
    path: user/addUser
    parameters:
      timestamp: ''
    body:
      cluster_id: ''
      password: ''
      username: ''
      zone: ''
  deleteUser:
    method: post
    description: delete cluster user
    path: user/deleteUser
    parameters:
      timestamp: ''
    body:
      cluster_id: ''
      username: ''
      zone: ''
  modifyUser:
    method: post
    description: modify cluster user attributions
    path: user/modifyUser
    parameters:
      timestamp: ''
    body:
      cluster_id: ''
      new_password: ''
      username: ''
      zone: ''
